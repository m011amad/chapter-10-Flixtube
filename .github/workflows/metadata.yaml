#
# GitHub Actions workflow.
#
# Automatically deploys the Node.js microservice to Kubernetes on push to the main branch.
# For real use you might want to restrict this to the "prod" branch.
#

name: Deploy metadata

on:
  # Deploys the microservice on merge to the main branch of this code repository in the specified subdirectory.
  pull_request:
    branches:
      - main
    paths:
      - metadata/**

  #
  # Allows deployment to be invoked manually through the GitHub Actions user interface.
  #
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      VERSION: ${{ github.sha }}
      CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
      REGISTRY_UN: ${{ secrets.REGISTRY_UN }}
      REGISTRY_PW: ${{ secrets.REGISTRY_PW  }}
      NAME: metadata
      DIRECTORY: metadata

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE.
      - uses: actions/checkout@v3

      # Sets up Node.js.
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20.x"
          cache: "npm"

      # Installs the Azure CLI.
      - name: Install Node.js dependencies
        working-directory: ${{ env.DIRECTORY }}
        run: npm ci

      # Runs the tests.
      - name: Run tests
        working-directory: ${{ env.DIRECTORY }}
        run: npm test

      #
      # Builds the Docker image.
      #
      - name: Build
        run: ./scripts/cd/build-image.sh

      #
      # Publishes the Docker image to the container registry.
      #
      - name: Publish
        run: ./scripts/cd/push-image.sh

      # Installs the Azure CLI.
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1

      - uses: azure/aks-set-context@v3
        with:
          resource-group: "sit722week83"
          cluster-name: "sit722week83"
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      #
      # Expands the configuration template and deploys the microservice.
      #
      - name: Deploy
        run: ./scripts/cd/deploy.sh
