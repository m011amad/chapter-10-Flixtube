#
# GitHub Actions workflow.
#
# Automatically deploys the Node.js microservice to Kubernetes on push to the main branch.
# For real use you might want to restrict this to the "prod" branch.
#

name: Deploy azure-storage

on:
  # Deploys the microservice on merge to the main branch of this code repository in the specified subdirectory.
  pull_request:
    branches:
      - main
    paths:
      - azure-storage/**

  #
  # Allows deployment to be invoked manually through the GitHub Actions user interface.
  #
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      VERSION: ${{ github.sha }}
      CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
      REGISTRY_UN: ${{ secrets.REGISTRY_UN }}
      REGISTRY_PW: ${{ secrets.REGISTRY_PW  }}
      STORAGE_ACCOUNT_NAME: ${{ secrets.STORAGE_ACCOUNT_NAME }}
      STORAGE_ACCESS_KEY: ${{ secrets.STORAGE_ACCESS_KEY }}
      NAME: azure-storage
      DIRECTORY: azure-storage

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE.
      - uses: actions/checkout@v3

      #
      # Builds the Docker image.
      #
      - name: Build
        run: ./scripts/cd/build-image.sh

      #
      # Publishes the Docker image to the container registry.
      #
      - name: Publish
        run: ./scripts/cd/push-image.sh

      # Installs the Azure CLI.
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1

      - uses: azure/aks-set-context@v3
        with:
          resource-group: "amirflixtube"
          cluster-name: "amirflixtube"
      #
      # Expands the configuration template and deploys the microservice.
      #
      - name: Deploy
        run: ./scripts/cd/deploy.sh
